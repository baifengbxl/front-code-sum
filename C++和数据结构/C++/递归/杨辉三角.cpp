#include <iostream>
using namespace std;

int main (){
	
	/* Title: 杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)的i次方的展开式的系数。
    * 它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。
    * 
    * 例如，下面给出了杨辉三角形的前4行： 
    *    1 
    *   1 1
    *  1 2 1
    * 1 3 3 1
	*/
	
	
	/**杨辉三角算法：
		用二维数组来实现：
			--第一行为特殊情况：第一行为1
			--终止条件：每一行的第一个数和最后一个数为 也就是第I行的第一列和第I列为1
			--规律：每一行的数等于上一行他肩上的两个数之和，
					也就是a[i][j] = a[i-1][j-1] + a[i-1][j] ,其中i表示行，j表示列 
	
	**/	
	
	//定义要打印的行数
	int row;   //row 为行数 
	cout << "请输入你要打印的杨辉三角的行数：";
	cin >> row; 
	cout << "\n下面是杨辉三角的输出：\n\n"; 

	//定义一个二维数组
	int a[34][34] ;	
	a[0][0] = 1;	
	
	
	//行数 
	for(int i = 0; i < row ; i++){
		
		//列数
		for(int j = 0; j <= i; j++){
			
			if(j == 0 || j == i){
				a[i][j] = 1;  //终止条件 
			}else{
				a[i][j] = a[i-1][j-1] + a[i-1][j];  //一般条件 
			}
			//输出这一列 
			cout << a[i][j] << " ";	
		} 
		
		cout << endl;
	} 
	
return 0;
}
